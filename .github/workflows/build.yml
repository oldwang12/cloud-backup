name: Build and Cache Binary

on: [push]

jobs:
  go-build-amd64:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Go版本信息
        run: go version

      - name: 编译 amd64 二进制
        run: |
          env GOOS=linux GOARCH=amd64 CGO_ENABLED=0 GOFLAGS=-mod=vendor go build -o cloud-backup-amd64 main.go
          mkdir -p ${{ runner.workspace }}/bin
          chmod +x cloud-backup-amd64
          mv cloud-backup-amd64 ${{ runner.workspace }}/bin/

      - name: 缓存二进制
        uses: actions/cache@v2
        with:
          path: ${{ runner.workspace }}/bin
          key: binaries-${{ runner.os }}

      - name: 上传二进制
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: ${{ runner.workspace }}/bin
  go-build-arm64:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Go版本信息
        run: go version

      - name: 编译 arm64 二进制
        run: |
          env GOOS=linux GOARCH=arm64 CGO_ENABLED=0 GOFLAGS=-mod=vendor go build -o cloud-backup-arm64 main.go
          mkdir -p ${{ runner.workspace }}/bin
          chmod +x cloud-backup-arm64
          mv cloud-backup-arm64 ${{ runner.workspace }}/bin/

      - name: 缓存二进制
        uses: actions/cache@v2
        with:
          path: ${{ runner.workspace }}/bin
          key: binaries-${{ runner.os }}

      - name: 上传二进制
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: ${{ runner.workspace }}/bin

  go-build-armv7:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Go版本信息
        run: go version

      - name: 编译 arm v7 二进制
        run: |
          env GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=0 GOFLAGS=-mod=vendor go build -o cloud-backup-armv7 main.go
          mkdir -p ${{ runner.workspace }}/bin
          chmod +x cloud-backup-armv7
          mv cloud-backup-armv7 ${{ runner.workspace }}/bin/

      - name: 缓存二进制
        uses: actions/cache@v2
        with:
          path: ${{ runner.workspace }}/bin
          key: binaries-${{ runner.os }}

      - name: 上传二进制
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: ${{ runner.workspace }}/bin

  go-build-armv8:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Go版本信息
        run: go version

      - name: 编译 arm v8 二进制
        run: |
          env GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=0 GOFLAGS=-mod=vendor go build -o cloud-backup-armv8 main.go
          mkdir -p ${{ runner.workspace }}/bin
          chmod +x cloud-backup-armv8
          mv cloud-backup-armv8 ${{ runner.workspace }}/bin/

      - name: 缓存二进制
        uses: actions/cache@v2
        with:
          path: ${{ runner.workspace }}/bin
          key: binaries-${{ runner.os }}

      - name: 上传二进制
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: ${{ runner.workspace }}/bin

  docker-build-amd64:
    needs: go-build-amd64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: 下载缓存二进制
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: ./bin

      - name: 登陆 hub 仓库
        run: docker login --username=oldwang6 -p ${{ secrets.HUB_PASSWORD }}

      - name: 编译 amd64 镜像
        run: |
          chmod +x ./bin/cloud-backup-amd64
          mv ./bin/cloud-backup-amd64 ./bin/cloud-backup
          make docker-build-amd64

  docker-build-arm64:
    needs: go-build-arm64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: 下载缓存二进制
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: ./bin

      - name: 登陆 hub 仓库
        run: docker login --username=oldwang6 -p ${{ secrets.HUB_PASSWORD }}

      - name: 编译 arm64 镜像
        run: |
          chmod +x ./bin/cloud-backup-arm64
          mv ./bin/cloud-backup-arm64 ./bin/cloud-backup
          make docker-build-arm64

  docker-build-armv7:
    needs: go-build-armv7
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: 下载缓存二进制
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: ./bin

      - name: 登陆 hub 仓库
        run: docker login --username=oldwang6 -p ${{ secrets.HUB_PASSWORD }}

      - name: 编译 arm v7 镜像
        run: |
          chmod +x ./bin/cloud-backup-armv7
          mv ./bin/cloud-backup-armv7 ./bin/cloud-backup
          make docker-build-armv7

  docker-build-armv8:
    needs: go-build-armv8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: 下载缓存二进制
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: ./bin

      - name: 登陆 hub 仓库
        run: docker login --username=oldwang6 -p ${{ secrets.HUB_PASSWORD }}

      - name: 编译 arm v8 镜像
        run: |
          chmod +x ./bin/cloud-backup-armv8
          mv ./bin/cloud-backup-armv8 ./bin/cloud-backup
          make docker-build-armv8

  manifest:
    needs:
      [
        docker-build-amd64,
        docker-build-arm64,
        docker-build-armv7,
        docker-build-armv8,
      ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: 登陆 hub 仓库
        run: docker login --username=oldwang6 -p ${{ secrets.HUB_PASSWORD }}

      - name: 使用 manifest 合并镜像并推送
        run: make manifest
